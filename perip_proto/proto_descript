Данный файл является описанием протокола управления UART по ethernet.

Описание протокола.
В [] указаны номера байт в структурах.

Стартовые байты пакета данного протокола - 0x44, 0х55. 

1.  Пакет настройки ethernet интерфейса 
        1 байт
        [1] - настройка интерфейса (ip, mask, gw, mac) (код 0x20).
        
    1.1. Запрос настроек ethernet:
        1 байт
        [1] - запрос интерфейса - 0x01.

    Ответ на запрос:
        21 байт
        [1] - код команды 0x20;
        [2] - код запроса 0x01;
        [3-7] - ip адрес;
        [8-11] - маска;
        [12-15] - шлюз;
        [16-21] - mac адрес;
        
        Пример: 0x44_55_20_01.
        Ответ: 0x44_55_20_01_FE_7D_01_40_FE_7D_01_40_FE_7D_01_40_FE_7D_01_40_34_12.

    1.2. Запрос изменения настроек ethernet:
        19 байт
        [1] - установка настроек интерфейса - 0x02.
        [1-4] - ip адрес;
        [5-8] - маска;
        [5-8] - шлюз;
        [5-10] - mac адрес;

    Ответ на запрос:
        3 байта
        [1] - код команды 0x20;
        [2] - код запроса 0x02;
        [3] - результат установки (setOk = 0x02 - изменения успешны, setErr = 0x01 - ошибка установки);

        Пример: 0x44_55_20_02_FE_7D_01_40_FE_7D_01_40_FE_7D_01_40_FE_7D_01_40_34_12.
        Ответ: 0x44_55_20_02_02.

2.  Запрос количества доступных интерфейсов:
        1 байт
        [1] - команда запроса интерфейсов (0x23).
    
    Ответ на запрос:
    
    Смещение   Длина(байт)     Название в структуре         Описание
       [0]        1             cmd_code                ответ на команду(0x03)    
       [1]        1             inter_count            количество интерфейсов
       [2]        1             uart_inter_count      количество интерфейсов uart
       [3]  uart_inter_count    uartX_num             номера доступных интерйесов uart
       [3+uart_inter_count]        1             spi_inter_count      количество интерфейсов spi
       [3+uart_inter_count+1]  spi_inter_count     spiX_num             номера доступных интерйесов spi
    //Возможно расширение данного пакета

    Пример: 
        Запрос: 0x44_55_23.
        Ответ: 0x44_55_23_04_01_04_01_02_03_05.

3.  Запрос доступных настроек и конфигураций интерфейса:
    !!!Единственный индивидульный пакет на каждый интерфейс.
        3 байта
        [1] - команда запроса настройки интерфейса (0x24).
        [2] - тип интерфейса
        [3] - номер интерфейса

    Ответ на запрос:
    
    Смещение   Длина(байт)     Название в структуре         Описание
       [0]        1                cmd_code                     ответ на команду(0x24)    
       [1]        1                

    Пример: 
        Запрос: 0x44_55_24_01_03.
        Ответ: 0x44_55_23_01_03_01_02_03_05.

4.  Работа с интерфейсами:
        [1] - команда работы с интерфейсом (0x25).  
    
    Заголовок содержит 3 байта:
        [1] - тип интерфейса (после получения интерфесов по команде 0x23).
                0x01 - uart;
                0x02 - spi; (reserve in next implementation)
                0x03 - i2c; (reserve in next implementation)
                0x04 - can; (reserve in next implementation)
                0x05 - gpio; (reserve in next implementation)
                0x06 - PWM; (reserve in next implementation)
        
        [2] - номер интерфейса (после получения интерфесов по команде 0x23).
                0x01 - uart1;
                0x02 - uart2;
                0x03 - uart3;
                0x04 - uart4;
                0x05 - uart5;
        
        [3] - тип пакета (
                код 0x01 - конфигурационный пакет;
                код 0x02 - пакет управления интерфейсом;
                код 0x03 - пакет с данными для передачи по интерфейсу;
                код 0x04 - запрос приема данных по интерфейсу;
                код 0x05 - пакет с данными принятыми по интерфейсу.
                )

    4.1. Конфигурационный пакет имеет разную длину для различных переферийных интерфейсов:
        В данном случае для UART переферии он задается следующими значениями.
        Смещение   Длина(байт)   Название в структуре       Описание
        [4]        4           baud_rate              скорость интерфейса 
        [8]        1           data_bit               длина данных интерфейса [7, 8, 9]
        [9]        1           stop_bit                 длина стоп бита  
        [10]       1           parity                   контроль четности 
        [11]       1           parity_type              тип контроля четности (четный, нечетный)
        [12]       1           port_num                используемые выходные пины для данного интерфейса

    Ответ на конфигурационный пакет.
        5 байт
       [1] - код команды (код 0x25)
       [2] - код пакета (код 0x01 - конфигурационный пакет)
       [3] - тип интерфейса ().
       [4] - номер интерфейса ().
       [5] - результат конфигурации (configOk = 0x02, configErr = 0x01).

        Пример: 
            Запрос: 0x44_55_25_01_01_03_02_01_01_00_00_01.
            Ответ: 0x44_55_25_01_01_03_02 или 0x44_55_25_01_01_03_01

    4.2. Пакет управления интерфейсом.
        Включение и выключение определенного интерфейса.
    Смещение   Длина(байт)   Название в структуре       Описание
       [0]        1             interface_cmd          байт управления (0x01 - вкл, 0x02 - откл)
       
    Ответ на пакет управления.
        5 байт 
       [1] - код команды (код 0x25)
       [2] - код пакета (код 0x02 - пакет управления)
       [3] - тип интерфейса ().
       [4] - номер интерфейса ().
       [5] - результат конфигурации (ctrlOn = 0x02, ctrlOff = 0x01).
        
        Пример: 
            Запрос: 0x44_55_25_02_01_03_01 
            Ответ: 0x44_55_25_02_01_03_02

    4.3. Пакет данных для передачи имеет разную длину имеет следующую структуру:
    
    Смещение   Длина(байт)   Название в структуре       Описание
       [0]        2             data_len               длина данных 
       [2]       data_len       data                     данные
       
    Ответ на пакет данных.
        7 байт 
       [1] - код команды (код 0x25)
       [2] - код пакета (код 0x03 - пакет данных для передачи)
       [3] - тип интерфейса ().
       [4] - номер интерфейса ().
       [5] - результат передачи (sendOk = 0x02, sendErr = 0x01).
       [6-7] - количество переданных байт.

            Пример: 
            Запрос: 0x44_55_25_03_01_03_00_05_FD_34_89_67_23.
            Ответ: 0x44_55_25_03_01_03_02_00_05

    4.4. Запрос для приема данных по интерфейсу (блокирующий команда, на другой стороне необходимо ждать принятые данные).

    Смещение   Длина(байт)   Название в структуре       Описание
       [0]        2             data_len               длина данных 
       
    Ответ на пакет данных.
        7 байт 
       [1] - код команды (код 0x25)
       [2] - код пакета (код 0x04 - запрос на чтение данных из интерфейса)
       [3] - тип интерфейса ().
       [4] - номер интерфейса ().
       [5] - результат передачи (readOk = 0x02, readErr = 0x01).
       [6-7] - количество прочитанных байт (data_len)
       [8-(8+data_len)] - количество принятых байт.

            Пример: 
            Запрос: 0x44_55_25_04_01_03_00_05.
            Ответ: 0x44_55_25_04_01_03_02_00_05_FD_34_89_67_23

    4.5. Пакет с данными принятыми по интерфейсу 
       
    Пакет данных.
        7 байт 
       [1] - код команды (код 0x25)
       [2] - код пакета (код 0x05 - пакет с принятыми данными) 
       [3] - тип интерфейса ().
       [4] - номер интерфейса ().
       [5] - результат передачи (readOk = 0x02, readErr = 0x01).
       [6-7] - количество прочитанных байт (data_len)
       [8-(8+data_len)] - количество принятых байт.
            
            Пример: 
            Запрос: нет запроса (ответ формируется по приходу данных на интерфейс).
            Ответ: 0x44_55_25_05_01_03_02_00_05_FD_34_89_67_23

5.  Ответ на неизвестный пакет:
    !!!Данные ответ на все пакеты с неизвестными кодами.
        1 байт пример
        [1] - код 0x35 (пример).

    Ответ на запрос:
        2 байта 
       [1] - код команды (код 0x35 (пример))
       [2] - неизвестный код команды (код 0xDF).
      
    Пример: 
        Запрос: 0x44_55_35.
        Ответ: 0x44_55_35_DF.
